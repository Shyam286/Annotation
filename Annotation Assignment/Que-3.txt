import java.lang.annotation.*;
import java.lang.reflect.Method;

@Target(ElementType.METHOD)
@Retention(RetentionPolicy.RUNTIME)
@interface Execute{
    int sequence() default 0;
}
public class Annotation_3{
    public static void main(String[] args) throws Exception {
        MyClass t= new MyClass();
        t.myMethod1();
        Class c=t.getClass();
        Method m=c.getDeclaredMethod("myMethod1");
        Execute a=m.getAnnotation(Execute.class);
       // Execute m=(Execute)a;
        System.out.println(a.sequence());
    }
}
class MyClass{
    @Execute(sequence=2)
    public void myMethod1(){
    System.out.println("Method1");
    }
    @Execute(sequence=1)
    public void myMethod2(){
        System.out.println("Method2");
    }
    @Execute(sequence=3)
    public void myMethod3(){
        System.out.println("Method3");
    }
}
