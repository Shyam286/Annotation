package vom.annotation.assignment;

import java.lang.annotation.Annotation;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
import java.lang.reflect.Method;

public class Annotation_1 {
	
	public static void main(String[] args) {
		Class<Check> obj=Check.class;
		for(Method method :obj.getDeclaredMethods() ) {
			if(method.isAnnotationPresent(Test.class)) {
				Annotation an=method.getAnnotation(Test.class);
				Test test=(Test)an;
				
				if(test.res()) {
					System.out.println("This Method is a test case");
				}
				else
				{
					System.out.println("This Method is not a test case");

				}
			}
		}
		
	}

}

@Target(ElementType.METHOD) 
@Retention(RetentionPolicy.RUNTIME)
@interface Test{
    boolean res() default true;
}


class Check{
	String r;
	@Test
	  void  TestA() {
		}
	}
